import { ConnectingLine } from "./connectingLine.js";
import { DraggableCircle } from "./draggableCircle.js";
import { ClickableLock } from "./clickableLock.js";

document.addEventListener("DOMContentLoaded", function () {

    // make dynamic
    const circles=  [];
    const numCircles= 3;
    const boundsY = { lower: 40, upper: 700 };
    const initialX = 300
    const slope = -1

    // makeHardCodedCircles_V2()


    function createSVGContainer() {
        const svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
        svg.style.position = "absolute";
        svg.style.top = "0";
        svg.style.left = "0";
        svg.style.width = "100%";
        svg.style.height = "100%";
        svg.style.pointerEvents = "none";
        document.body.appendChild(svg);
        return svg;
    }

    createSVGContainer()

    
    //issue it stops at 5?? On inkspace it should stop at 440
    function makeHardCodedCircles_V1() {
        const newCircle = new DraggableCircle({
            initialPosition: { top: 15.12, left: 3.44 },
            bounds: {lower: 15.12, upper: 440},
            slope: Infinity
            
        });

    }
    function makeHardCodedCircles_V2() {
        const circleA = new DraggableCircle({
            initialPosition: { top: 15.82, left: 3.44 },
            bounds: {lower: 15.12, upper: 582},
            slope: Infinity
        });
        circles.push(circleA)

        const circleC = new DraggableCircle({
            initialPosition: { top: 15.12, left: 570 },
            bounds: {lower: 15.12, upper: 582},
            slope: Infinity
        });
        circles.push(circleC)


    }

    const axisCoordsMap = {"Axis 1": {"xMin": 4.7, "xMax": 4.8, "yMin": 15.0, "yMax": 440.1, "valueMin": 0.0, "valueMax": 20.0, "points": {"[4.7, 15.0]": 0.0, "[4.7, 17.1]": 0.1, "[4.7, 19.2]": 0.2, "[4.7, 21.3]": 0.3, "[4.7, 23.5]": 0.4, "[4.7, 25.6]": 0.5, "[4.7, 27.7]": 0.6, "[4.7, 29.8]": 0.7, "[4.7, 32.0]": 0.8, "[4.7, 34.1]": 0.9, "[4.7, 36.2]": 1.0, "[4.7, 38.4]": 1.1, "[4.7, 40.5]": 1.2, "[4.7, 42.6]": 1.3, "[4.7, 44.7]": 1.4, "[4.7, 46.9]": 1.5, "[4.7, 49.0]": 1.6, "[4.7, 51.1]": 1.7, "[4.7, 53.2]": 1.8, "[4.7, 55.4]": 1.9, "[4.7, 57.5]": 2.0, "[4.7, 59.6]": 2.1, "[4.7, 61.7]": 2.2, "[4.7, 63.9]": 2.3, "[4.7, 66.0]": 2.4, "[4.7, 68.1]": 2.5, "[4.7, 70.2]": 2.6, "[4.7, 72.4]": 2.7, "[4.7, 74.5]": 2.8, "[4.7, 76.6]": 2.9, "[4.7, 78.7]": 3.0, "[4.7, 80.9]": 3.1, "[4.7, 83.0]": 3.2, "[4.7, 85.1]": 3.3, "[4.7, 87.2]": 3.4, "[4.7, 89.4]": 3.5, "[4.7, 91.5]": 3.6, "[4.7, 93.6]": 3.7, "[4.8, 95.7]": 3.8, "[4.8, 97.9]": 3.9, "[4.8, 100.0]": 4.0, "[4.8, 102.1]": 4.1, "[4.8, 104.2]": 4.2, "[4.8, 106.4]": 4.3, "[4.8, 108.5]": 4.4, "[4.8, 110.6]": 4.5, "[4.8, 112.7]": 4.6, "[4.8, 114.9]": 4.7, "[4.8, 117.0]": 4.8, "[4.8, 119.1]": 4.9, "[4.8, 121.2]": 5.0, "[4.8, 123.4]": 5.1, "[4.8, 125.5]": 5.2, "[4.8, 127.6]": 5.3, "[4.8, 129.8]": 5.4, "[4.8, 131.9]": 5.5, "[4.8, 134.0]": 5.6, "[4.8, 136.1]": 5.7, "[4.8, 138.3]": 5.8, "[4.8, 140.4]": 5.9, "[4.8, 142.5]": 6.0, "[4.8, 144.6]": 6.1, "[4.8, 146.8]": 6.2, "[4.8, 148.9]": 6.3, "[4.8, 151.0]": 6.4, "[4.8, 153.1]": 6.5, "[4.8, 155.3]": 6.6, "[4.8, 157.4]": 6.7, "[4.8, 159.5]": 6.8, "[4.8, 161.6]": 6.9, "[4.8, 163.8]": 7.0, "[4.8, 165.9]": 7.1, "[4.8, 168.0]": 7.2, "[4.8, 170.1]": 7.3, "[4.8, 172.3]": 7.4, "[4.8, 174.4]": 7.5, "[4.8, 176.5]": 7.6, "[4.8, 178.6]": 7.7, "[4.8, 180.8]": 7.8, "[4.8, 182.9]": 7.9, "[4.8, 185.0]": 8.0, "[4.8, 187.1]": 8.1, "[4.8, 189.3]": 8.2, "[4.8, 191.4]": 8.3, "[4.8, 193.5]": 8.4, "[4.8, 195.6]": 8.5, "[4.8, 197.8]": 8.6, "[4.8, 199.9]": 8.7, "[4.8, 202.0]": 8.8, "[4.8, 204.1]": 8.9, "[4.8, 206.3]": 9.0, "[4.8, 208.4]": 9.1, "[4.8, 210.5]": 9.2, "[4.8, 212.7]": 9.3, "[4.8, 214.8]": 9.4, "[4.8, 216.9]": 9.5, "[4.8, 219.0]": 9.6, "[4.8, 221.2]": 9.7, "[4.8, 223.3]": 9.8, "[4.8, 225.4]": 9.9, "[4.8, 227.5]": 10.0, "[4.8, 229.7]": 10.1, "[4.8, 231.8]": 10.2, "[4.8, 233.9]": 10.3, "[4.8, 236.0]": 10.4, "[4.8, 238.2]": 10.5, "[4.8, 240.3]": 10.6, "[4.8, 242.4]": 10.7, "[4.8, 244.5]": 10.8, "[4.8, 246.7]": 10.9, "[4.8, 248.8]": 11.0, "[4.8, 250.9]": 11.1, "[4.8, 253.0]": 11.2, "[4.8, 255.2]": 11.3, "[4.8, 257.3]": 11.4, "[4.8, 259.4]": 11.5, "[4.8, 261.5]": 11.6, "[4.8, 263.7]": 11.7, "[4.8, 265.8]": 11.8, "[4.8, 267.9]": 11.9, "[4.8, 270.0]": 12.0, "[4.8, 272.2]": 12.1, "[4.8, 274.3]": 12.2, "[4.8, 276.4]": 12.3, "[4.8, 278.5]": 12.4, "[4.8, 280.7]": 12.5, "[4.8, 282.8]": 12.6, "[4.8, 284.9]": 12.7, "[4.8, 287.0]": 12.8, "[4.8, 289.2]": 12.9, "[4.8, 291.3]": 13.0, "[4.8, 293.4]": 13.1, "[4.8, 295.5]": 13.2, "[4.8, 297.7]": 13.3, "[4.8, 299.8]": 13.4, "[4.8, 301.9]": 13.5, "[4.8, 304.1]": 13.6, "[4.8, 306.2]": 13.7, "[4.8, 308.3]": 13.8, "[4.8, 310.4]": 13.9, "[4.8, 312.6]": 14.0, "[4.8, 314.7]": 14.1, "[4.8, 316.8]": 14.2, "[4.8, 318.9]": 14.3, "[4.8, 321.1]": 14.4, "[4.8, 323.2]": 14.5, "[4.8, 325.3]": 14.6, "[4.8, 327.4]": 14.7, "[4.8, 329.6]": 14.8, "[4.8, 331.7]": 14.9, "[4.8, 333.8]": 15.0, "[4.8, 335.9]": 15.1, "[4.8, 338.1]": 15.2, "[4.8, 340.2]": 15.3, "[4.8, 342.3]": 15.4, "[4.8, 344.4]": 15.5, "[4.8, 346.6]": 15.6, "[4.8, 348.7]": 15.7, "[4.8, 350.8]": 15.8, "[4.8, 352.9]": 15.9, "[4.8, 355.1]": 16.0, "[4.8, 357.2]": 16.1, "[4.8, 359.3]": 16.2, "[4.8, 361.4]": 16.3, "[4.8, 363.6]": 16.4, "[4.8, 365.7]": 16.5, "[4.8, 367.8]": 16.6, "[4.8, 369.9]": 16.7, "[4.8, 372.1]": 16.8, "[4.8, 374.2]": 16.9, "[4.8, 376.3]": 17.0, "[4.8, 378.4]": 17.1, "[4.8, 380.6]": 17.2, "[4.8, 382.7]": 17.3, "[4.8, 384.8]": 17.4, "[4.8, 387.0]": 17.5, "[4.8, 389.1]": 17.6, "[4.8, 391.2]": 17.7, "[4.8, 393.3]": 17.8, "[4.8, 395.5]": 17.9, "[4.8, 397.6]": 18.0, "[4.8, 399.7]": 18.1, "[4.8, 401.8]": 18.2, "[4.8, 404.0]": 18.3, "[4.8, 406.1]": 18.4, "[4.8, 408.2]": 18.5, "[4.8, 410.3]": 18.6, "[4.8, 412.5]": 18.7, "[4.8, 414.6]": 18.8, "[4.8, 416.7]": 18.9, "[4.8, 418.8]": 19.0, "[4.8, 421.0]": 19.1, "[4.8, 423.1]": 19.2, "[4.8, 425.2]": 19.3, "[4.8, 427.3]": 19.4, "[4.8, 429.5]": 19.5, "[4.8, 431.6]": 19.6, "[4.8, 433.7]": 19.7, "[4.8, 435.8]": 19.8, "[4.8, 438.0]": 19.9, "[4.8, 440.1]": 20.0}, "scale": "linear"}, "Axis 2": {"xMin": 4.8, "xMax": 359.0, "yMin": 85.8, "yMax": 440.1, "valueMin": 0.0, "valueMax": 10.0, "points": {"[359.0, 85.8]": 10.0, "[355.9, 88.8]": 9.5, "[352.6, 92.2]": 9.0, "[348.9, 95.9]": 8.5, "[344.8, 99.9]": 8.0, "[340.4, 104.4]": 7.5, "[335.4, 109.4]": 7.0, "[334.3, 110.4]": 6.9, "[333.3, 111.5]": 6.8, "[332.1, 112.6]": 6.7, "[331.0, 113.8]": 6.6, "[329.8, 114.9]": 6.5, "[328.7, 116.1]": 6.4, "[327.4, 117.4]": 6.3, "[326.2, 118.6]": 6.2, "[324.9, 119.9]": 6.1, "[323.6, 121.2]": 6.0, "[322.3, 122.5]": 5.9, "[320.9, 123.9]": 5.8, "[319.5, 125.3]": 5.7, "[318.0, 126.8]": 5.6, "[316.5, 128.3]": 5.5, "[315.0, 129.8]": 5.4, "[313.4, 131.4]": 5.3, "[311.8, 133.0]": 5.2, "[310.1, 134.7]": 5.1, "[308.4, 136.4]": 5.0, "[306.7, 138.1]": 4.9, "[304.8, 140.0]": 4.8, "[303.0, 141.8]": 4.7, "[301.1, 143.7]": 4.6, "[299.1, 145.7]": 4.5, "[297.0, 147.8]": 4.4, "[294.9, 149.9]": 4.3, "[292.7, 152.1]": 4.2, "[290.5, 154.3]": 4.1, "[288.2, 156.6]": 4.0, "[285.8, 159.0]": 3.9, "[283.3, 161.5]": 3.8, "[280.7, 164.1]": 3.7, "[278.1, 166.8]": 3.6, "[275.3, 169.5]": 3.5, "[272.4, 172.4]": 3.4, "[269.5, 175.3]": 3.3, "[266.4, 178.4]": 3.2, "[263.2, 181.6]": 3.1, "[259.8, 185.0]": 3.0, "[256.4, 188.4]": 2.9, "[252.8, 192.1]": 2.8, "[249.0, 195.8]": 2.7, "[245.1, 199.8]": 2.6, "[240.9, 203.9]": 2.5, "[236.7, 208.2]": 2.4, "[232.2, 212.7]": 2.3, "[227.5, 217.4]": 2.2, "[222.5, 222.3]": 2.1, "[217.3, 227.5]": 2.0, "[211.9, 232.9]": 1.9, "[206.1, 238.7]": 1.8, "[200.1, 244.7]": 1.7, "[193.7, 251.1]": 1.6, "[187.0, 257.9]": 1.5, "[179.8, 265.0]": 1.4, "[172.3, 272.6]": 1.3, "[164.2, 280.6]": 1.2, "[155.6, 289.2]": 1.1, "[146.5, 298.4]": 1.0, "[136.7, 308.1]": 0.9, "[126.3, 318.6]": 0.8, "[115.0, 329.9]": 0.7, "[102.9, 342.0]": 0.6, "[89.8, 355.1]": 0.5, "[75.7, 369.2]": 0.4, "[60.3, 384.6]": 0.3, "[43.5, 401.4]": 0.2, "[25.1, 419.8]": 0.1, "[4.8, 440.1]": 0.0}, "scale": "logarithmic"}, "Axis 3": {"xMin": 429.9, "xMax": 429.9, "yMin": 14.9, "yMax": 440.0, "valueMin": 0.0, "valueMax": 10.0, "points": {"[429.9, 14.9]": 0.0, "[429.9, 19.1]": 0.1, "[429.9, 23.4]": 0.2, "[429.9, 27.6]": 0.3, "[429.9, 31.9]": 0.4, "[429.9, 36.2]": 0.5, "[429.9, 40.4]": 0.6, "[429.9, 44.7]": 0.7, "[429.9, 48.9]": 0.8, "[429.9, 53.2]": 0.9, "[429.9, 57.4]": 1.0, "[429.9, 61.7]": 1.1, "[429.9, 65.9]": 1.2, "[429.9, 70.2]": 1.3, "[429.9, 74.4]": 1.4, "[429.9, 78.7]": 1.5, "[429.9, 82.9]": 1.6, "[429.9, 87.2]": 1.7, "[429.9, 91.4]": 1.8, "[429.9, 95.7]": 1.9, "[429.9, 99.9]": 2.0, "[429.9, 104.2]": 2.1, "[429.9, 108.4]": 2.2, "[429.9, 112.7]": 2.3, "[429.9, 116.9]": 2.4, "[429.9, 121.2]": 2.5, "[429.9, 125.4]": 2.6, "[429.9, 129.7]": 2.7, "[429.9, 133.9]": 2.8, "[429.9, 138.2]": 2.9, "[429.9, 142.4]": 3.0, "[429.9, 146.7]": 3.1, "[429.9, 150.9]": 3.2, "[429.9, 155.2]": 3.3, "[429.9, 159.4]": 3.4, "[429.9, 163.7]": 3.5, "[429.9, 167.9]": 3.6, "[429.9, 172.2]": 3.7, "[429.9, 176.4]": 3.8, "[429.9, 180.7]": 3.9, "[429.9, 184.9]": 4.0, "[429.9, 189.2]": 4.1, "[429.9, 193.4]": 4.2, "[429.9, 197.7]": 4.3, "[429.9, 201.9]": 4.4, "[429.9, 206.2]": 4.5, "[429.9, 210.5]": 4.6, "[429.9, 214.7]": 4.7, "[429.9, 219.0]": 4.8, "[429.9, 223.2]": 4.9, "[429.9, 227.5]": 5.0, "[429.9, 231.7]": 5.1, "[429.9, 236.0]": 5.2, "[429.9, 240.2]": 5.3, "[429.9, 244.5]": 5.4, "[429.9, 248.7]": 5.5, "[429.9, 253.0]": 5.6, "[429.9, 257.2]": 5.7, "[429.9, 261.5]": 5.8, "[429.9, 265.7]": 5.9, "[429.9, 270.0]": 6.0, "[429.9, 274.2]": 6.1, "[429.9, 278.5]": 6.2, "[429.9, 282.7]": 6.3, "[429.9, 287.0]": 6.4, "[429.9, 291.2]": 6.5, "[429.9, 295.5]": 6.6, "[429.9, 299.7]": 6.7, "[429.9, 304.0]": 6.8, "[429.9, 308.2]": 6.9, "[429.9, 312.5]": 7.0, "[429.9, 316.7]": 7.1, "[429.9, 321.0]": 7.2, "[429.9, 325.2]": 7.3, "[429.9, 329.5]": 7.4, "[429.9, 333.7]": 7.5, "[429.9, 338.0]": 7.6, "[429.9, 342.2]": 7.7, "[429.9, 346.5]": 7.8, "[429.9, 350.7]": 7.9, "[429.9, 355.0]": 8.0, "[429.9, 359.2]": 8.1, "[429.9, 363.5]": 8.2, "[429.9, 367.7]": 8.3, "[429.9, 372.0]": 8.4, "[429.9, 376.2]": 8.5, "[429.9, 380.5]": 8.6, "[429.9, 384.8]": 8.7, "[429.9, 389.0]": 8.8, "[429.9, 393.3]": 8.9, "[429.9, 397.5]": 9.0, "[429.9, 401.8]": 9.1, "[429.9, 406.0]": 9.2, "[429.9, 410.3]": 9.3, "[429.9, 414.5]": 9.4, "[429.9, 418.8]": 9.5, "[429.9, 423.0]": 9.6, "[429.9, 427.3]": 9.7, "[429.9, 431.5]": 9.8, "[429.9, 435.8]": 9.9, "[429.9, 440.0]": 10.0}, "scale": "linear"}}
    
    
    const axisKeys = Object.keys(axisCoordsMap); // ["Axis 1", "Axis 2", "Axis 3"]

    for (const axisKey of axisKeys) {
        const axisCoords = axisCoordsMap[axisKey]; // {"xMin": 6.1, "xMax": 6.1, ...}
        const SCALING_FACTOR= 1.32; // scaling factor for the coordinates
        const xMin = axisCoords.xMin*SCALING_FACTOR;
        const xMax = axisCoords.xMax*SCALING_FACTOR;
        const yMin = axisCoords.yMin*SCALING_FACTOR;
        const yMax = axisCoords.yMax*SCALING_FACTOR;

        const valueMin = axisCoords.valueMin;
        const valueMax = axisCoords.valueMax;
        const points = axisCoords.points; // {"[6.1, 12.4]": 0.0, "[6.1, 15.3]": 0.1, ...}
        const scale = axisCoords.scale; // "linear"
        let ybounds = { lower: yMin, upper: yMax };

        let slope;
        if (axisKey == "Axis 1" ){
            ybounds = { lower: 15.12, upper: 582 };
        }

        if (yMax- yMin < 0.5) { // horizontal
            slope = 0
        }
        else if (xMax - xMin < 0.5) { // vertical
            slope = Infinity
        } else {
            slope = (yMax - yMin) / (xMax - xMin);
        }

        const newCircle = new DraggableCircle({
            initialPosition: { top: yMin, left:xMax },
            bounds: ybounds,
            slope: slope
        });
        circles.push(newCircle)
    }
    makeIsopleths();
        
    function makeIsopleths() {
        for (let i = 0; i< numCircles-1; i++ ){
            const connectingLine = new ConnectingLine ({
                circle1: circles[i],
                circle2: circles[i+1],
                opacity: "1"
            })
            circles[i].next_line = connectingLine
            circles[i+1].prev_line = connectingLine
        }
    }

    // lock: calc x midpoint b/w axes.
    // if vertical: (M_x, y_end + c)
    // if horizontal: (M_x, M_y +c)
    // if diagonal: (M_x, M_y + 2c)
}
);



document.addEventListener("DOMContentLoaded", function () {
    let verticalLockIncrement = 50;
    let horizontalLockIncrement = 10;

    function makeLock(x1, y1, x2, y2) {
        let midX = (x1 + x2) / 2;
        let midY = (y1 + y2) / 2;
        let lockPosition;
        
        if ((x1 - x2) === 0 || (y1 - y2) === 0) { // vertical/horizontal
            lockPosition = { left: midX + "px", top: y2 + verticalLockIncrement + "px" };
        } else {
            lockPosition = { left: midX + horizontalLockIncrement + "px", top: midY + 2 * verticalLockIncrement + "px" };
        }
        
        new ClickableLock({ position: lockPosition });
    }

    makeLock(570, 15, 570, 582);
});
    // const lockPositions = [
    //     { left: 5+ horizontalLockIncrement, top: 582 + verticalLockIncrement },
    //     { left: 250 + 2*horizontalLockIncrement,  top: 330 +1.5*verticalLockIncrement },
    //     { left: 570, top: 582 + 0.5*verticalLockIncrement}
    // ];
    
    // lockPositions.forEach(position => {
    //     new ClickableLock({ position });
    // });